#!/bin/bash

arg=$1
shift

if [ -z $arg ]; then
  cat `which $0`
  exit
fi

case $arg in
  a)       git add $@ ;;
  aa)      git add --all $@ ;;
  af)      git add $(git status --porcelain | sed -n 's/^ M //gp' | fzf) ;;
  rf)      git reset HEAD $(git status --porcelain | sed -E -n 's/^(M |A |D ) //gp' | fzf) ;;
  s)       git status $@ ;;
  c)       git commit $@ ;;
  o)       git checkout $@ ;;
  of)      git checkout $(git branch | sed -E -n 's/^  //gp' | fzf) ;;
  R)       git reset $@ ;;
  M)       git add --all && git commit ;;
  p)       git pull $@ ;;
  pr)      git pull --rebase $@ ;;
  P)       git push $@ ;;
  d)       git diff $@ ;;
  l)       git log $@ ;;
  ylc)     git rev-parse HEAD | tr -d '\n' | $CLIPBOARD_COPY ;;
  dlc)     git diff HEAD~1...HEAD $@ ;;
  yc)      
    git log --pretty=format:'%h %s' --abbrev-commit \
      |fzf |awk '{print $1}' | tr -d '\n' | $CLIPBOARD_COPY ;;
  bridiff) 
    if [ -z "$2" ] 
    then
      git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' \
        --abbrev-commit --date=relative master..HEAD
    else
      git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' \
        --abbrev-commit --date=relative $2..$3
    fi ;;
  *) git $@ ;;
esac


