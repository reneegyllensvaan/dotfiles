#!/bin/zsh
log () {
  # if echo "$@" | grep "hasn't changed" >/dev/null 2>&1; then
  #   printf '\033[1;30m'"$@"'\033[0m'" \n"
  # else
    echo $@
  # fi
}
debug () {
  if [ "$DEBUG" = "1" ]; then
    echo $@
  fi
}
fatal () {
  printf '\033[0;31m'"$@"'\033[0m'
  FATAL=1
}
warn () {
  printf '\033[0;33m'"$@"'\033[0m'
}
prompt () {
  printf '\033[0;34m'"$@"'\033[0m '
  read result
  if [ 'y' = "$result" ]; then
    return 0
  fi
  return 1
}

if [[ ! -f "./setup" ]]; then
  fatal "This script must be run from the directory it's contained in"
  exit 1
fi

if [[ ! -f "./shell/user-profile" ]]; then
  log "Couldn't find a valid user-profile file, let's make one"
  log "# Couldn't find 'shell/user-profile' in current directory." > ./shell/user-profile
  log "# Please set one up based on user-profile.example\n" >> ./shell/user-profile
  cat ./shell/user-profile.example >> ./shell/user-profile

  vim shell/user-profile
  if [ "$?" != "0" ]; then
    fatal "  Error: Vim exited with a non-zero exit code"
    exit $?
  elif [ "$?" != "0" ]; then
    fatal "  Vim exited but we can't find a user-profile file"
    exit
  fi
  log "    Sweet! Let's continue."
fi

while [ $1 ]; do
  case "$1" in
    "uninstall") uninstall=true;shift;;
    "-r"|"--remove-backups") remove_backups=true;shift;;
    "-f"|"--force-overwrite") force_overwrite=true;shift;;
    "-n"|"--nobuild-templates") nobuild_templates=true;shift;;
    "-h"|"--help")
      echo "Command line arguments:"
      echo "  -r   --remove-backups     Remove old .bak files from safe copy"
      echo "  -f   --force-overwrite    Force overwrite of copied files"
      echo "  -n   --nobuild-templates  Don't rebuild .tmpl.sh files"
      exit;;
    *) echo "Unknown command line option $1";exit 1;;
  esac
done

log "Sourcing profile and user-profile to make sure we have the latest env..."
source $PWD/shell/profile
source $PWD/shell/user-profile
source $PWD/colors/$COLORSCHEME

CMDS=()
push_cmd () {
  CMDS+=("$1")
}

build_template () {
  if [ ! $nobuild_templates ]; then
    [ -f "$PWD/$1.tmpl.sh" ] || log "\nTemplate $1.tmpl.sh not found, skipping. Please fix this!"
    if sh "$PWD/$1.tmpl.sh" > "$PWD/$1"; then
      log "  Built $1.tmpl.sh -> $1"
    else
      log "  Skipped template $1.tmpl.sh -> $1"
      rm "$PWD/$1"
    fi
  fi
}

symlink () {
  if [ $uninstall ]; then
    [ -L $3 ] && rm $3
    return 0
  fi

  overwrite=''
  case "$1" in
    "dir")
      if [ ! -d "$2" ]; then
        fatal "  Error: Couldn't find file $2, check setup script."
      elif [ -L "$3" ]; then
        debug "Compare: <`readlink $3`>"
        debug "         <$PWD/$2>"
        if [ "`readlink $3`" = "$PWD/$2" ]; then
          debug "Identical symlink exists, skipping."
          return 0
        fi
        overwrite=' (overwrite)'
        push_cmd "rm '$3'"
      elif [ -d "$3" ] && [ '' = `ls $3` ]; then
        push_cmd "rmdir '$3' >/dev/null 2>&1"
        log "    Found empty directory $3, will remove it"
      elif [ -e "$3" ]; then
        fatal "  Error: Found non-empty directory or file $3, please remove or back it up."
      fi
      log "    Symlinking $2 -> $3$overwrite"
      push_cmd "ln -sf '$PWD/$2' '$3'"
      ;;
    "file")
      if [ -e "$3" ] && [ ! -L "$3" ]; then
        log "    Found existing file or directory '$3', backing it up as '$3.bak'"
        push_cmd "mv '$PWD/$3' '$PWD/$3.bak'"
      elif [ -L "$3" ]; then
        if [ "`readlink $3`" = "$PWD/$2" ]; then
          debug "Identical symlink exists, skipping."
          return 0
        fi
        overwrite=' (overwrite)'
        push_cmd "rm '$3'"
      fi
      log "    Symlinking $2 -> $3$overwrite";
      push_cmd "ln -sf '$PWD/$2' '$3'"
      ;;
  esac
}

# safe copy function that only updates changed files, and takes a backup of changes
safe_copy () {
  # just copy and overwrite if force_overwrite is on
  [ $force_overwrite ] && cat $1 > $2 && return 0
  which shasum >/dev/null 2>&1 && hash_command='shasum'
  hash_new=`$hash_command $1 | head -c 40`
  hash_old=`$hash_command $2 | head -c 40`
  if [[ $hash_new = $hash_old ]]; then
    debug "    $2 hasn't changed, skipping..."
  else
    [ -f "$2.bak" ] && \
      fatal "$2.bak would be overwritten, please move or delete that file to prevent data loss" && return 1
    [ ! $remove_backups ] && \
      [ -f $2 ] && \
      push_cmd "mv $2 '$2.bak'"
    [ $remove_backups ] && \
      push_cmd "rm '$2.bak'"
    push_cmd "cp '$1' '$2'"
  fi
}

ensure_git_repo () {
  grep "$1" .gitignore >/dev/null || log "$1" >> .gitignore
  if [ ! -d "$1" ]; then
    log "  Couldn't find a folder at $1, will clone $2 there"
    push_cmd "git clone --single-branch $3 '$2' '$1'"
    return 1
  fi
  return 0
}

ensure_directory () {
  if [ -e "$1" ] && [ ! -d "$1" ]; then
    fatal "  Error: Found something at $1, but it's not a directory like we want. Please move or delete it"
  elif [ ! -e "$1" ]; then
    log "  Will create new directory '$1'"
    push_cmd "mkdir -p '$1'"
  fi
}

ensure_file () {
  if [ ! -e "$1" ]; then
    log "Create file $1"
    push_cmd "touch '$1'"
  elif [ ! -f "$1" ]; then
    fatal "Found something at $1, but it's not a file. Please check and re-run"
  fi
}

# load git submodules
ensure_git_repo shell/zmodules/zsh-syntax-highlighting https://github.com/zsh-users/zsh-syntax-highlighting
# ensure_git_repo steno/steno-dictionaries https://github.com/didoesdigital/steno-dictionaries
# ensure_git_repo system-packages/from-source/fxz https://github.com/conor42/fxz

ensure_directory vim/pack/plugins/start
ensure_directory vim/pack/plugins/opt

# Vim startup plugins
ensure_git_repo vim/pack/plugins/start/gnupg https://github.com/jamessan/vim-gnupg
ensure_git_repo vim/pack/plugins/start/commentary https://github.com/tpope/vim-commentary
ensure_git_repo vim/pack/plugins/start/editorconfig https://github.com/editorconfig/editorconfig-vim
ensure_git_repo vim/pack/plugins/start/skim_base https://github.com/lotabout/skim \
  || ( symlink dir ~/.skim vim/pack/plugins/start/skim_base ; push_cmd 'cd ~/.skim && ./install')
ensure_git_repo vim/pack/plugins/start/skim https://github.com/lotabout/skim.vim
# Dynamic plugins
ensure_git_repo vim/pack/plugins/opt/vinegar https://github.com/tpope/vim-vinegar
ensure_git_repo vim/pack/plugins/opt/gitgutter https://github.com/airblade/vim-gitgutter.git
ensure_git_repo vim/pack/plugins/opt/fugitive https://github.com/tpope/vim-fugitive.git
ensure_git_repo vim/pack/plugins/opt/onedark https://github.com/joshdick/onedark.vim
ensure_git_repo vim/pack/plugins/opt/coc https://github.com/neoclide/coc.nvim '--branch release'
ensure_git_repo vim/pack/plugins/opt/colors-atlas https://github.com/huyvohcmc/atlas.vim
ensure_git_repo vim/pack/plugins/opt/floaterm https://github.com/voldikss/vim-floaterm

ensure_git_repo vim/pack/plugins/opt/polyglot-small https://github.com/reneegyllensvaan/vim-polyglot.git
ensure_git_repo vim/pack/plugins/opt/polyglot-large https://github.com/sheerun/vim-polyglot.git


log "Building shell template files"
build_template gpg/gpg.conf
build_template gpg/gpg-agent.conf
build_template other/gitconfig
build_template README.md
build_template email/neomuttrc-env-home
build_template email/neomuttrc-env-work
build_template email/notmuch-config-home
build_template email/notmuch-config-work
build_template shell/alias
build_template x11/zathurarc
build_template x11/xres/colors
build_template x11/dunstrc

if which yq >/dev/null 2>&1; then
  if [ -e ~/.config/textmateSnippets ]; then
    log "Rebuilding textmate snippets from yaml"
    (cd ~/.config/textmateSnippets && ./build.sh)
  else
    warn "No directory found in ~/.config/textMateSnippets, not attempting to build"
  fi
else
  warn "Could not find 'yq' executable, not rebuilding textmate snippets"
fi

log "Making the config directories and linking/copying files"
ensure_directory $HOME/.config/
ensure_directory $HOME/.local/bin
ensure_directory $HOME/.local/share
ensure_directory $HOME/.tmp

log "  Xorg applications"
symlink file x11/xinitrc ~/.xinitrc
symlink file x11/xsession ~/.xsession
symlink dir x11/xres ~/.xres
ensure_directory ~/.config/dunst
symlink file x11/dunstrc ~/.config/dunst/dunstrc
ensure_directory $HOME/.config/i3
symlink file x11/i3_config $HOME/.config/i3/config
ensure_directory $HOME/.config/zathura
symlink file x11/zathurarc $HOME/.config/zathura/zathurarc
ensure_directory $HOME/.config/kitty
symlink file x11/kitty.conf $HOME/.config/kitty/kitty.conf
symlink file x11/picom.conf $HOME/.config/picom.conf
ensure_directory $HOME/.config/alacritty
symlink file x11/alacritty.yml $HOME/.config/alacritty/alacritty.yml


log "  Urxvt conf"
ensure_directory $HOME/.urxvt
symlink dir urxvt-ext $HOME/.urxvt/ext

log "  Vim directories and conf"
symlink file vim/rc/vimrc_coc.vim $HOME/.vimrc
symlink file vim/rc/gvimrc.vim $HOME/.gvimrc
symlink dir vim $HOME/.vim
ensure_directory vim/files/backup
ensure_directory vim/files/swap
ensure_directory vim/files/undo
ensure_directory vim/files/info
ensure_file vim/files/recent.log
ensure_file vim/files/recent-write.log
ensure_file vim/files/bookmarks.vim
ensure_directory $HOME/.config/nvim/
symlink file vim/rc/vimrc_coc.vim $HOME/.config/nvim/init.vim
symlink file vim/coc-settings.json $HOME/.config/nvim/coc-settings.json

log "  GPG config"
ensure_directory $HOME/.gnupg
safe_copy gpg/gpg.conf $HOME/.gnupg/gpg.conf
safe_copy gpg/gpg-agent.conf $HOME/.gnupg/gpg-agent.conf
ensure_directory $HOME/.ssh
safe_copy other/ssh_config $HOME/.ssh/config
ensure_file $HOME/.ssh/user_config

log "  Tmux config"
symlink file other/tmux.conf $HOME/.tmux.conf
symlink file other/tmux-disposable.conf $HOME/.tmux-disposable.conf
ensure_git_repo other/tmux-extrakto https://github.com/laktak/extrakto

log "  Zsh configs"
symlink file shell/zshrc $HOME/.zshrc
symlink dir shell/zfunctions $HOME/.zfunctions
symlink dir shell/zmodules $HOME/.zmodules

log "  Email config"
symlink file email/neomuttrc-env-home $HOME/.neomuttrc-env-home
symlink file email/neomuttrc-env-work $HOME/.neomuttrc-env-work
symlink file email/neomuttrc-unbind $HOME/.neomuttrc-unbind
symlink file email/neomuttrc-colors $HOME/.neomuttrc-colors
push_cmd "[ -f \"email/notmuch-config-home\" ] && cat email/notmuch-config-home > $HOME/.notmuch-config-home"
push_cmd "[ -f \"email/notmuch-config-work\" ] && cat email/notmuch-config-work > $HOME/.notmuch-config-work"
if [ "$USER_PROFILE_ENV" = "work" ]; then
  symlink file email/neomuttrc-work $HOME/.neomuttrc-mbox-primary,
  symlink file email/neomuttrc-home $HOME/.neomuttrc-mbox-secondary
  symlink file bin/notmuch-work $HOME/.local/bin/notmuch-primary
  symlink file bin/notmuch-home $HOME/.local/bin/notmuch-secondary
  push_cmd "[ -f \"email/notmuch-config-work\" ] && cat email/notmuch-config-work > $HOME/.notmuch-config-primary"
  push_cmd "[ -f \"email/notmuch-config-home\" ] && cat email/notmuch-config-home > $HOME/.notmuch-config-secondary"
else
  symlink file email/neomuttrc-home $HOME/.neomuttrc-mbox-primary
  symlink file email/neomuttrc-work $HOME/.neomuttrc-mbox-secondary
  symlink file bin/notmuch-home $HOME/.local/bin/notmuch-primary
  symlink file bin/notmuch-work $HOME/.local/bin/notmuch-secondary
  push_cmd "[ -f \"email/notmuch-config-work\" ] && cat email/notmuch-config-work > $HOME/.notmuch-config-primary"
  push_cmd "[ -f \"email/notmuch-config-home\" ] && cat email/notmuch-config-home > $HOME/.notmuch-config-secondary"
fi
symlink file email/neomuttrc $HOME/.neomuttrc
ensure_directory $HOME/.config/urlscan
symlink file email/urlscan.json $HOME/.config/urlscan/config.json
ensure_directory $HOME/email/work

log "  Symlinked directories"
symlink dir bin $HOME/.bin
symlink dir ranger $HOME/.config/ranger
symlink dir shell/fish $HOME/.config/fish

log "  Other configs"
symlink file other/batrc $HOME/.batrc
symlink file shell/alias $HOME/.alias
symlink file shell/profile $HOME/.profile
symlink file shell/user-profile $HOME/.user-profile

symlink file other/editorconfig $HOME/.editorconfig
symlink file other/gitconfig $HOME/.gitconfig
symlink file other/tigrc $HOME/.tigrc
symlink file other/ctags $HOME/.ctags

if [ '' != "$FATAL" ]; then
  fatal "There were errors during setup, please fix them and re-run"
  exit $FATAL
fi

prompt "Look over these changes, do they look ok? [y/N]"\
  || exit

# Finally, reconcile commands
[ -e last_install.log ] && rm last_install.log
[ -e last_install_errors.log ] && rm last_install_errors.log
for cmd in $CMDS; do
  printf "$cmd"
  echo "$cmd" >> last_install.log
  sh -c "$cmd" 2>last_install_errors.log
  printf "\r\033[2K"
done
echo "Log written to ./last_install.log"
[ "`cat last_install_errors.log`" ] \
  && fatal "./last_install_errors.log was not empty, please check it for errors" \
  || rm last_install_errors.log

log "\n...Finished!"
