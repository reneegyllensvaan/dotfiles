# We're letting zsh eat plenty of space for history here, it can be reduced if
# memory is scarce, but it's really convenient to have lots of history to
# search with fzf

export HISTSIZE=1000000
export SAVEHIST=1000000
export HISTFILE="$HOME/.zhistory"
unsetopt SHARE_HISTORY
setopt APPEND_HISTORY

setopt PROMPT_SUBST
# Set vi mode with no timeout
export KEYTIMEOUT=1; bindkey -v
# Set completion to be case-insensitive in unambiguous cases
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}'

source "$HOME/.profile"
source "$HOME/.user-profile"
source "$HOME/.alias"
source "$HOME/.zfunctions/dir-marks.zsh"
source "$HOME/.zfunctions/miscellaneous.zsh"
source "$HOME/.zfunctions/colors.zsh"
source "$HOME/.zfunctions/git-prompt.zsh"
source "$HOME/.zfunctions/fzf.zsh"
[ -f "$HOME/.zfunctions/zsh-syntax-highlighting.zsh" ] \
  && source "$HOME/.zfunctions/zsh-syntax-highlighting.zsh"

autoload -U compinit
# cache zsh completions for 22 hours
completion_cache_time=`noglob expr 22 * 3600`
noglob \
  expr `date '+%s'` \
  - `date -r ~/.zcompdump '+%s'` \
  - $completion_cache_time \
  | grep '-' >/dev/null \
  && compinit -C ~/.zcompdump \
  || compinit ~/.zcompdump

#autoload -U promptinit; promptinit
#prompt pure

EMOJI=( 💅 💋 💍 🐱 👻 💄 👑 👒 🐶 🐹 🦊 🐰 🦆 🦄 🦋 🐳 🐍 🐢 ✨ 💫 🌈 💧 🍋 🍉 🍓 🥥 🥝 🥑 🥦 🌶 🥞 🍬 💎 🔮 🎁 💜 💞 )

if [ -z $(echo $TERM | grep rxvt) ]; then
  function prepend_prompt () {
    echo -n "$EMOJI[$RANDOM%$#EMOJI+1]"
  };

  function precmd () {
    prepend_prompt;
  };

else
  function prepend_prompt () {
  };
fi

[ $RANGER_LEVEL ] && ranger_prompt="(ranger)" #

# Set up the prompt template
PROMPT=$'\n'"%{$fg[blue]%}%B%~%{$reset_color%} \$(git_prompt_info)"
[ $SSH_CLIENT ] && PROMPT="$PROMPT [%n@%m]" # only append prompt with host over ssh
#PROMPT="$PROMPT"$'\n'"$ranger_prompt%(?.%F{green}.%F{red})>%f "
PROMPT="$PROMPT"$'\n$(prepend_prompt) '"%(?.%F{green}.%F{red})❯%f "


# opam configuration
#test -r /Users/renee/.opam/opam-init/init.zsh && . /Users/renee/.opam/opam-init/init.zsh > /dev/null 2> /dev/null || true

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
# GnuPG settings
export GPG_TTY="$(tty)"
if [ $GPG_FINGERPRINT ]; then
  #[ "$SSH_AUTH_SOCK" ] || export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
  export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
  # if gpg-agent is not running, start it and load env
  pgrep gpg-agent >/dev/null || eval $(gpg-agent --options $HOME/.gnupg/gpg-agent.conf --daemon )
fi

#which npm >/dev/null && export PATH="`npm bin -g`:$PATH"
